#!/usr/bin/env node

/**
 * Watch skript pro automatick√© kop√≠rov√°n√≠ soubor≈Ø p≈ôi zmƒõn√°ch
 * Sleduje zmƒõny v hlavn√≠ch souborech a automaticky je kop√≠ruje do public
 */

const fs = require('fs');
const path = require('path');
const { exec } = require('child_process');

// Definice soubor≈Ø, kter√© se maj√≠ sledovat
const filesToWatch = [
    'index.html',
    'script.js', 
    'styles.css',
    'firebase.js'
];

// C√≠lov√° slo≈æka
const publicDir = 'public';

/**
 * Funkce pro spu≈°tƒõn√≠ kop√≠rov√°n√≠
 */
function runCopyScript() {
    return new Promise((resolve, reject) => {
        exec('node copy-files.js', (error, stdout, stderr) => {
            if (error) {
                console.error('‚ùå Chyba p≈ôi kop√≠rov√°n√≠:', error);
                reject(error);
                return;
            }
            
            // Zobraz v√Ωstup pouze p≈ôi zmƒõn√°ch (ne p≈ôi startu)
            if (stdout.includes('‚úÖ Zkop√≠rov√°no:')) {
                console.log(stdout);
            }
            resolve();
        });
    });
}

/**
 * Funkce pro nastaven√≠ sledov√°n√≠ soubor≈Ø
 */
function setupFileWatchers() {
    console.log('üëÄ Nastavuji sledov√°n√≠ soubor≈Ø...\n');
    
    filesToWatch.forEach(file => {
        if (fs.existsSync(file)) {
            console.log(`üìÅ Sleduji: ${file}`);
            
            fs.watchFile(file, { interval: 1000 }, (curr, prev) => {
                if (curr.mtime !== prev.mtime) {
                    console.log(`\nüîÑ Detekov√°na zmƒõna v souboru: ${file}`);
                    console.log(`‚è∞ ƒåas zmƒõny: ${new Date().toLocaleString('cs-CZ')}`);
                    
                    runCopyScript().catch(error => {
                        console.error('‚ùå Chyba p≈ôi automatick√©m kop√≠rov√°n√≠:', error);
                    });
                }
            });
        } else {
            console.log(`‚ö†Ô∏è  Soubor ${file} neexistuje, p≈ôeskoƒçuji sledov√°n√≠...`);
        }
    });
}

/**
 * Funkce pro inicializaci watch m√≥du
 */
async function initializeWatch() {
    console.log('üöÄ Spou≈°t√≠m watch m√≥d pro automatick√© kop√≠rov√°n√≠...\n');
    
    // Nejd≈ô√≠ve zkop√≠ruj v≈°echny soubory
    console.log('üìã Prov√°d√≠m poƒç√°teƒçn√≠ kop√≠rov√°n√≠ v≈°ech soubor≈Ø...');
    await runCopyScript();
    
    console.log('\n‚úÖ Poƒç√°teƒçn√≠ kop√≠rov√°n√≠ dokonƒçeno!');
    console.log('üëÄ Nyn√≠ sleduji zmƒõny v souborech...\n');
    console.log('üí° Pro ukonƒçen√≠ stiskni Ctrl+C\n');
    
    // Nastav sledov√°n√≠ soubor≈Ø
    setupFileWatchers();
}

/**
 * Funkce pro graceful shutdown
 */
function setupGracefulShutdown() {
    process.on('SIGINT', () => {
        console.log('\n\nüëã Ukonƒçuji watch m√≥d...');
        console.log('‚úÖ Watch m√≥d byl √∫spƒõ≈°nƒõ ukonƒçen.');
        process.exit(0);
    });
    
    process.on('SIGTERM', () => {
        console.log('\n\nüëã Ukonƒçuji watch m√≥d...');
        process.exit(0);
    });
}

// Spus≈• watch m√≥d
setupGracefulShutdown();
initializeWatch().catch(error => {
    console.error('‚ùå Chyba p≈ôi inicializaci watch m√≥du:', error);
    process.exit(1);
});
